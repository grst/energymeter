from datetime import UTC, datetime

from sqlalchemy import Column, DateTime, Integer, create_engine
from sqlalchemy.orm import declarative_base, sessionmaker

Base = declarative_base()


class Pulse(Base):
    """Store pulses generated by an S0 interface"""

    __tablename__ = "pulses"

    meter_id = Column(Integer, nullable=False, index=True, primary_key=True)
    time = Column(DateTime, nullable=False, default=datetime.now(UTC), index=True, primary_key=True)


class Power(Base):
    """Store power measurements (current power in Watts)"""

    __tablename__ = "power"
    meter_id = Column(Integer, nullable=False, index=True, primary_key=True)
    time = Column(DateTime, nullable=False, default=datetime.now(UTC), index=True, primary_key=True)
    value = Column(Integer, nullable=False)


class CumulativePower(Base):
    """Store cumulative power measurements (counter readouts in Watt hours)"""

    __tablename__ = "cumulative_power"
    meter_id = Column(Integer, nullable=False, index=True, primary_key=True)
    time = Column(DateTime, nullable=False, default=datetime.now(UTC), index=True, primary_key=True)
    value = Column(Integer, nullable=False)


def get_session(con):
    engine = create_engine(con)
    Base.metadata.create_all(engine)
    Session = sessionmaker(bind=engine)
    return Session()
